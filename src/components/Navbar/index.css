@import "../../styles/all.css";

$modal-height: 402px;

.root {
  display: grid;
  align-items: center;
  justify-content: space-between;
  grid-template-columns: repeat(2, auto);
  grid-template-rows: $line-height-body;

  padding-top: $spacing-28;

  a {
    text-decoration: none;
  }

  @include Breakpoint-mobileOnly {
    padding-top: $spacing-16;
  }
}

.root * {
  z-index: 2;
}

.root.isOpen {
  grid-row-gap: $spacing-56;
  grid-template-rows: $line-height-body auto;

  @include Breakpoint-mobileOnly {
    max-width: $content-width-mobile;

    padding-right: calc($gutter / 2);
    padding-left: calc($gutter / 2);
    margin: 0 auto;
  }
}

.links {
  display: flex;
  flex-direction: row;
}

.menu-toggle {
  position: relative;

  height: $line-height-body-mobile;
  min-width: 30px;

  background-color: transparent;

  cursor: pointer;
  outline: none;
  -webkit-tap-highlight-color: transparent;

  user-select: none;

  @include Breakpoint-tabletAndAbove {
    display: none;
  }
}

.close-icon {
  height: 100%;

  background: url("../../assets/images/close.svg") center center no-repeat;
}

.navigation {
  display: flex;

  @include Breakpoint-tabletAndAbove {
    flex-direction: row;
    align-items: center;
  }

  @include Breakpoint-mobileOnly {
    flex-direction: column;
  }
}

.navigation.isClosed {
  @include Breakpoint-mobileOnly {
    /* Visually hidden for accessbility */
    position: absolute;

    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;

    overflow: hidden;

    border: 0;

    clip: rect(0 0 0 0);
  }
}

.link:not(:last-child) {
  display: block;

  cursor: pointer;

  text-decoration: none;

  @include Breakpoint-tabletAndAbove {
    margin-right: $spacing-28;
  }

  @include Breakpoint-mobileOnly {
    margin-bottom: $spacing-28;
  }
}

.contact-us {
  @include Breakpoint-mobileOnly {
    margin-top: $spacing-56;
  }
}

.modal {
  display: block;

  width: 100vw;
  height: $modal-height;

  background-color: color(white alpha(98%));
}

:global {
  .ReactModal__Overlay {
    background-color: transparent !important;

    opacity: 0;

    transition: opacity 250ms ease-in;
  }

  .ReactModal__Overlay--after-open {
    opacity: 1;
  }

  .ReactModal__Overlay--before-close {
    opacity: 0;
  }
}
